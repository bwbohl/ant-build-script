<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="sample-project" default="dist">
  
  <!-- import default properties from file -->
  <property file="build.properties"/>
  <property file="local.build.properties"/>
  <condition property="version-status" value="${version}-${status}" else="${version}">
    <and>
      <isset property="status"/>
      <not>
        <equals arg1="${status}" arg2=""/>
      </not>
    </and>
  </condition>
  
  <target name="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>
  </target>
  
  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>
  
  <target name="reset">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>
  
  <!-- GIT -->

  <target name="get-local-git-revision">
    <description>Get the current git revision</description>
    <exec executable="git" outputproperty="local.revision">
      <arg value="describe"/>
      <arg value="--tags"/>
      <arg value="--always"/>
      <arg value="HEAD"/>
    </exec>
    <echo>Local revision: ${local.revision}</echo>
    <property name="revision" value="${local.revision}"/>
  </target>
  
  <target name="git-pull">
    <exec executable="git" dir="submodules/kb-xml-schema/">
      <arg value="pull"/>
    </exec>
  </target>
  
  <target name="git-checkout-master">
    <property name="dir.path"/>
    <?TODO how to submit params ?>
    <exec executable="git" dir="${dir.path}">
      <arg value="checkout"/>
      <arg value="master"/>
    </exec>
  </target>
  
  <!-- /GIT -->
  
  <target name="load-license">
    <loadfile srcfile="${license.file.path}" encoding="utf-8" property="license"/>
    <echo>${license}</echo>
  </target>
  
  <target name="create_dummy-xml">
    <echo file="${build.dir}/dummy.xml" encoding="UTF-8"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dummy></dummy>
]]></echo>
    <echo message="writing file: ${build.dir}/dummy.xml"/>
  </target>
  
  <target name="dist" depends="clean,init,get-local-git-revision,load-license">
    <property name="zip" value="${name.short}_${revision}.zip"/>
    <property name="dest" value="${build.dir}/${name.short}"/>
    <copy todir="${dest}" flatten="false" outputencoding="utf-8">
      <fileset dir=".">
        <exclude name="build.xml"/>
        <exclude name="build.properties"/>
        <exclude name="README.md"/>
        <exclude name="build/**"/>
        <exclude name="dist/**"/>
        <exclude name="miscellaneous/**"/>
      </fileset>
      <filterset>
        <filter token="NAME" value="${name}"/>
        <filter token="ID" value="${name.short}"/>
        <filter token="DESCRIPTION" value="${description}"/>
        <filter token="VERSION" value="${version-status}"/>
        <filter token="LICENSE" value="${license}"/>
        <filter token="ZIP" value="${zip}"/>
      </filterset>
    </copy>
    <zip basedir="${build.dir}" excludes="${name.short}/extension.xml" destfile="${dist.dir}/${revision}/${zip}"/>
    <copy file="${dest}/extension.xml" todir="${dist.dir}/${revision}/"/>
  </target>
  
</project>
